{"version":3,"sources":["jquery.touch-punch.js"],"names":["define","$","support","touch","document","touchHandled","mouseProto","ui","mouse","prototype","_mouseInit","_mouseDestroy","_touchStart","event","this","_mouseCapture","originalEvent","changedTouches","_touchMoved","simulateMouseEvent","_touchMove","_touchEnd","element","bind","touchstart","proxy","touchmove","touchend","call","unbind","simulatedType","touches","length","preventDefault","simulatedEvent","createEvent","initMouseEvent","window","screenX","screenY","clientX","clientY","target","dispatchEvent"],"mappings":"AAyBAA,OAAO,CAAC,UAAW,SAASC,GAOxB,GAHAA,EAAEC,QAAQC,MAAQ,eAAgBC,SAG7BH,EAAEC,QAAQC,MAAf,CAIA,IAGEE,EAHEC,EAAaL,EAAEM,GAAGC,MAAMC,UAC1BC,EAAaJ,EAAWI,WACxBC,EAAgBL,EAAWK,cA+C7BL,EAAWM,YAAc,SAASC,IAK1BR,GAHOS,KAGeC,cAAcF,EAAMG,cAAcC,eAAe,MAK3EZ,GAAe,EARJS,KAWNI,aAAc,EAGnBC,EAAmBN,EAAO,aAG1BM,EAAmBN,EAAO,aAG1BM,EAAmBN,EAAO,eAO9BP,EAAWc,WAAa,SAASP,GAGxBR,IAKLS,KAAKI,aAAc,EAGnBC,EAAmBN,EAAO,eAO9BP,EAAWe,UAAY,SAASR,GAGvBR,IAKLc,EAAmBN,EAAO,WAG1BM,EAAmBN,EAAO,YAGrBC,KAAKI,aAGNC,EAAmBN,EAAO,SAI9BR,GAAe,IASnBC,EAAWI,WAAa,WAETI,KAGNQ,QAAQC,KAAK,CACdC,WAAYvB,EAAEwB,MAJPX,KAImB,eAC1BY,UAAWzB,EAAEwB,MALNX,KAKkB,cACzBa,SAAU1B,EAAEwB,MANLX,KAMiB,eAI5BJ,EAAWkB,KAVAd,OAgBfR,EAAWK,cAAgB,WAEZG,KAGNQ,QAAQO,OAAO,CAChBL,WAAYvB,EAAEwB,MAJPX,KAImB,eAC1BY,UAAWzB,EAAEwB,MALNX,KAKkB,cACzBa,SAAU1B,EAAEwB,MANLX,KAMiB,eAI5BH,EAAciB,KAVHd,OAxIf,SAASK,EAAmBN,EAAOiB,GAG/B,KAAIjB,EAAMG,cAAce,QAAQC,OAAS,GAAzC,CAIAnB,EAAMoB,iBAEN,IAAI9B,EAAQU,EAAMG,cAAcC,eAAe,GAC/CiB,EAAiB9B,SAAS+B,YAAY,eAGtCD,EAAeE,eACfN,GACA,GACA,EACAO,OACA,EACAlC,EAAMmC,QACNnC,EAAMoC,QACNpC,EAAMqC,QACNrC,EAAMsC,SACN,GACA,GACA,GACA,EACA,EACA,MAIA5B,EAAM6B,OAAOC,cAAcT","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/* !\r\n * jQuery UI Touch Punch 0.2.3\r\n *\r\n * Copyright 2011â€“2014, Dave Furfero\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n *\r\n * Depends:\r\n *  jquery.ui.widget.js\r\n *  jquery.ui.mouse.js\r\n */\r\ndefine(['jquery'], function($) {\r\n    // (function ($) {\r\n\r\n    // Detect touch support\r\n    $.support.touch = 'ontouchend' in document;\r\n\r\n    // Ignore browsers without touch support\r\n    if (!$.support.touch) {\r\n        return;\r\n    }\r\n\r\n    var mouseProto = $.ui.mouse.prototype,\r\n      _mouseInit = mouseProto._mouseInit,\r\n      _mouseDestroy = mouseProto._mouseDestroy,\r\n      touchHandled;\r\n\r\n    /**\r\n     * Simulate a mouse event based on a corresponding touch event\r\n     * @param {Object} event A touch event\r\n     * @param {String} simulatedType The corresponding mouse event\r\n     */\r\n    function simulateMouseEvent(event, simulatedType) {\r\n\r\n        // Ignore multi-touch events\r\n        if (event.originalEvent.touches.length > 1) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        var touch = event.originalEvent.changedTouches[0],\r\n        simulatedEvent = document.createEvent('MouseEvents');\r\n\r\n        // Initialize the simulated mouse event using the touch event's coordinates\r\n        simulatedEvent.initMouseEvent(\r\n        simulatedType, // Type\r\n        true, // Bubbles\r\n        true, // Cancelable\r\n        window, // View\r\n        1, // Detail\r\n        touch.screenX, // ScreenX\r\n        touch.screenY, // ScreenY\r\n        touch.clientX, // ClientX\r\n        touch.clientY, // ClientY\r\n        false, // CtrlKey\r\n        false, // AltKey\r\n        false, // ShiftKey\r\n        false, // MetaKey\r\n        0, // Button\r\n        null // RelatedTarget\r\n        );\r\n\r\n        // Dispatch the simulated event to the target element\r\n        event.target.dispatchEvent(simulatedEvent);\r\n    }\r\n\r\n    /**\r\n   * Handle the jQuery UI widget's touchstart events\r\n   * @param {Object} event The widget element's touchstart event\r\n   */\r\n    mouseProto._touchStart = function(event) {\r\n\r\n        var self = this;\r\n\r\n        // Ignore the event if another widget is already being handled\r\n        if (touchHandled || !self._mouseCapture(event.originalEvent.changedTouches[0])) {\r\n            return;\r\n        }\r\n\r\n        // Set the flag to prevent other widgets from inheriting the touch event\r\n        touchHandled = true;\r\n\r\n        // Track movement to determine if interaction was a click\r\n        self._touchMoved = false;\r\n\r\n        // Simulate the mouseover event\r\n        simulateMouseEvent(event, 'mouseover');\r\n\r\n        // Simulate the mousemove event\r\n        simulateMouseEvent(event, 'mousemove');\r\n\r\n        // Simulate the mousedown event\r\n        simulateMouseEvent(event, 'mousedown');\r\n    };\r\n\r\n    /**\r\n   * Handle the jQuery UI widget's touchmove events\r\n   * @param {Object} event The document's touchmove event\r\n   */\r\n    mouseProto._touchMove = function(event) {\r\n\r\n        // Ignore event if not handled\r\n        if (!touchHandled) {\r\n            return;\r\n        }\r\n\r\n        // Interaction was not a click\r\n        this._touchMoved = true;\r\n\r\n        // Simulate the mousemove event\r\n        simulateMouseEvent(event, 'mousemove');\r\n    };\r\n\r\n    /**\r\n   * Handle the jQuery UI widget's touchend events\r\n   * @param {Object} event The document's touchend event\r\n   */\r\n    mouseProto._touchEnd = function(event) {\r\n\r\n        // Ignore event if not handled\r\n        if (!touchHandled) {\r\n            return;\r\n        }\r\n\r\n        // Simulate the mouseup event\r\n        simulateMouseEvent(event, 'mouseup');\r\n\r\n        // Simulate the mouseout event\r\n        simulateMouseEvent(event, 'mouseout');\r\n\r\n        // If the touch interaction did not move, it should trigger a click\r\n        if (!this._touchMoved) {\r\n\r\n            // Simulate the click event\r\n            simulateMouseEvent(event, 'click');\r\n        }\r\n\r\n        // Unset the flag to allow other widgets to inherit the touch event\r\n        touchHandled = false;\r\n    };\r\n\r\n    /**\r\n   * A duck punch of the $.ui.mouse _mouseInit method to support touch events.\r\n   * This method extends the widget with bound touch event handlers that\r\n   * translate touch events to mouse events and pass them to the widget's\r\n   * original mouse event handling methods.\r\n   */\r\n    mouseProto._mouseInit = function() {\r\n\r\n        var self = this;\r\n\r\n        // Delegate the touch handlers to the widget's element\r\n        self.element.bind({\r\n            touchstart: $.proxy(self, '_touchStart'),\r\n            touchmove: $.proxy(self, '_touchMove'),\r\n            touchend: $.proxy(self, '_touchEnd')\r\n        });\r\n\r\n        // Call the original $.ui.mouse init method\r\n        _mouseInit.call(self);\r\n    };\r\n\r\n    /**\r\n   * Remove the touch event handlers\r\n   */\r\n    mouseProto._mouseDestroy = function() {\r\n\r\n        var self = this;\r\n\r\n        // Delegate the touch handlers to the widget's element\r\n        self.element.unbind({\r\n            touchstart: $.proxy(self, '_touchStart'),\r\n            touchmove: $.proxy(self, '_touchMove'),\r\n            touchend: $.proxy(self, '_touchEnd')\r\n        });\r\n\r\n        // Call the original $.ui.mouse destroy method\r\n        _mouseDestroy.call(self);\r\n    };\r\n\r\n});\r\n"],"file":"jquery.touch-punch.min.js"}